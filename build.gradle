apply plugin: 'java'
apply plugin: 'jacoco'

def jversion= JavaVersion.VERSION_1_7

sourceCompatibility= jversion 
targetCompatibility= jversion

if(JavaVersion.current() < jversion) {
	throw new GradleException("Java >= " + jversion + " is required but you are running " + JavaVersion.current())
}

/** Return the MD5 sum of the give File object */
ext.generateMD5 = { file ->
	def digest = java.security.MessageDigest.getInstance("MD5")
	file.eachByte( 4096 ) { buffer, length ->
		digest.update( buffer, 0, length )
	}
	new BigInteger(1, digest.digest()).toString(16).padLeft(32, '0')
}

/** Gunzip the given file. Same as `gunzip -c dir/myfile.txt.gz > dir/myfile.txt`. 
String filename must have extension .gz */
ext.gunzip = { filename ->
    file(filename.replaceFirst('\\.gz$', '')).withOutputStream { os ->
  	  os << resources.gzip(filename).read()
  	}
}

/* Fetch test data not in repos
 */

File targetFile= new File('test_data/chr7.fa')
String targetMD5= "30c3693ead968844a769a90a801a900f"

if (!targetFile.exists() || ext.generateMD5(targetFile) != targetMD5) {
	println "Downloading " + targetFile.name
	File fgz= new File("test_data", targetFile.name + ".gz")

    new URL('http://hgdownload.cse.ucsc.edu/goldenpath/hg19/chromosomes/chr7.fa.gz').withInputStream{ i -> fgz.withOutputStream{ it << i }}
    
    ext.gunzip(fgz.absolutePath)
    
    fgz.delete()
    if(ext.generateMD5(targetFile) != targetMD5){
        throw new GradleException("Corrupted file " + targetFile)
    }
}

targetFile= new File('test_data/wgEncodeDukeDnase8988T.fdr01peaks.hg19.bb')
targetMD5= "22872e389c2161f444c2a0fccc292b19"

if (!targetFile.exists() || ext.generateMD5(targetFile) != targetMD5) {
	println "Downloading " + targetFile.name
    new URL('http://ftp.ebi.ac.uk/pub/databases/ensembl/encode/integration_data_jan2011/byDataType/openchrom/jan2011/fdrPeaks/wgEncodeDukeDnase8988T.fdr01peaks.hg19.bb').withInputStream{ i -> targetFile.withOutputStream{ it << i }}
    
    if(ext.generateMD5(targetFile) != targetMD5){
        throw new GradleException("Corrupted file " + targetFile)
    }
}

targetFile= new File('test_data/Homo_sapiens.GRCh38.86.chromosome.7.gff3.gz')
targetMD5= "c464351e66f8a9c4cb2b4c85c7f870e5"

if (!targetFile.exists() || ext.generateMD5(targetFile) != targetMD5) {
	println "Downloading " + targetFile.name
    new URL('ftp://ftp.ensembl.org/pub/release-86/gff3/homo_sapiens/Homo_sapiens.GRCh38.86.chromosome.7.gff3.gz').withInputStream{ i -> targetFile.withOutputStream{ it << i }}
    
    if(ext.generateMD5(targetFile) != targetMD5){
        throw new GradleException("Corrupted file " + targetFile)
    }
}

targetFile= new File('test_data/ALL.wex.union_illumina_wcmc_bcm_bc_bi.20110521.snps.exome.sites.vcf')
targetMD5= "6783ca5e6df2ce1075e1e0c924ad7d37"

if (!targetFile.exists() || ext.generateMD5(targetFile) != targetMD5) {
	println "Downloading " + targetFile.name
    File fgz= new File("test_data", targetFile.name + ".gz")
    new URL('ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase1/analysis_results/input_call_sets/ALL.wex.union_illumina_wcmc_bcm_bc_bi.20110521.snps.exome.sites.vcf.gz').withInputStream{ i -> fgz.withOutputStream{ it << i }}
    
    ext.gunzip(fgz.absolutePath)
	fgz.delete()  
    if(ext.generateMD5(targetFile) != targetMD5){
        throw new GradleException("Corrupted file " + targetFile)
    }
}

ext.gunzip("test_data/CEU.exon.2010_06.genotypes.vcf.gz")
ext.gunzip("test_data/ALL.wgs.mergedSV.v8.20130502.svs.genotypes.vcf.gz")

/* ------ */

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

jar {
    manifest {
        attributes "Main-Class": "samTextViewer.Main"
    }
 
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


dependencies {
	
	compile group: 'net.sourceforge.argparse4j', name: 'argparse4j', version: '0.8.1'
	compile group: 'jline', name: 'jline', version: '2.14.5'
	compile files('libs/htsjdk-1.141.1.jar')
	compile 'com.github.dariober:Jawk:e5c8f26'
	compile 'com.github.igvteam:igv:v2.3.61'

	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
	compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
	compile group: 'commons-validator', name: 'commons-validator', version: '1.6'
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	
	compile group: 'com.esotericsoftware.yamlbeans', name: 'yamlbeans', version: '1.13'
	compile group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13'
	compile group: 'com.google.guava', name: 'guava', version: '24.0-android'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
	compile group: 'org.biojava', name: 'biojava-genome', version: '4.2.11'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
	compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.21.0.1'
	
    testCompile 'junit:junit:4.12'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
